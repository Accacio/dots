# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1
focus_follows_mouse yes
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
for_window [class="Yad"] floating enable border pixel 0


# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
bindsym $alt+Ctrl+t exec st

# kill focused window
bindsym $mod+q kill
bindsym $mod+F7 mode "keyboard layout"

mode "keyboard layout"
{
        bindsym Return mode "default"
        bindsym Escape mode "default"
	bindsym f exec "setxkbmap fr";mode "default"
	bindsym p exec "setxkbmap br";mode "default"
}



# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+x exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+k focus down;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+i focus up;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+l focus right;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Down focus down;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Up focus up;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Right focus right;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"

# move focused window
bindsym $mod+Shift+j move left;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+k move down;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+i move up;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+l move right;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+Down move down;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+Up move up;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+Right move right;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+2 workspace 2;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+3 workspace 3;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+4 workspace 4;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+5 workspace 5;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+6 workspace 6;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+7 workspace 7;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+8 workspace 8;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+9 workspace 9;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+0 workspace 10;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"

# move focused container to workspace0 and change to respective workspace
bindsym $mod+Shift+1 move container to workspace 1; workspace 1;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+2 move container to workspace 2; workspace 2;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+3 move container to workspace 3; workspace 3;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+4 move container to workspace 4; workspace 4;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+5 move container to workspace 5; workspace 5;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+6 move container to workspace 6; workspace 6;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+7 move container to workspace 7; workspace 7;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+8 move container to workspace 8; workspace 8;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+9 move container to workspace 9; workspace 9;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"
bindsym $mod+Shift+0 move container to workspace 10; workspace 10;exec "xdotool mousemove --window $(xdotool getwindowfocus) --polar 0 0"

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Logout' 'i3-msg exit' -b 'Shutdown' 'shutdown now'"
# bindsym $mod+Shift+e exec "i3-msg exit"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym i resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt
        bindsym j resize shrink width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
	bindsym space mode "default"
	bindsym Control+g mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod+p exec "~/dots/scripts/multimonitor"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
    # tray_output none
    position bottom
}
exec_always xfce4-panel
exec_always xfce4-power-manager
# bindsym $mod+x exec "xfce4-popup-whiskermenu"
bindsym $mod+x exec "i3-dmenu-desktop"
bindsym Super_R exec "xfce4-popup-whiskermenu"
 # exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# exec_always --no-startup-id "xrandr --output HDMI1 --auto --right-of eDP1"



# xrandr --output HDMI1 --mode 1920x1080i --pos 1366x0 --rotate normal --output VIRTUAL1 --off --output eDP1 --primary --mode 1366x768 --pos 0x0 --rotate inverted
exec --no-startup-id "~/dots/scripts/dropbox start"
exec --no-startup-id "~/dots/scripts/autoRotation"
exec "emacs --daemon"

exec i3-sensible-terminal
exec surf web.whatsapp.com

# assign [class="Emacs"] 1
assign [class="X-terminal-emulator"] 2
# assign [class="Gnome-terminal"] 2
assign [class="Vivaldi-stable"] 3
for_window [title=".*whatsapp.*"] move scratchpad
assign [class="Nautilus"] 5
assign [class="Thunderbird"] 4

bindsym $mod+w scratchpad show


# windows

for_window [class="^.*"] border pixel 2
for_window [class="Gnome-terminal"] border pixel 0
for_window [class="St"] border pixel 0
for_window [class="mpv"] sticky enable
for_window [class="mpv"] border pixel 0
for_window [urgent="latest"] border pixel 1
# default_floating_border pixel 0

# gaps outer 0
# gaps inner 10
# smart_gaps on
# smart_borders on

for_window [class="mpv"] floating enable
for_window [instance="Msgcompose"] floating enable
for_window [title="neomutt"] floating enable
# for_window [instance="Msgcompose"] resize set 640 640


mode "apps"
{
        bindsym p exec "~/dots/scripts/seeOnMpv";mode "default"
        bindsym Escape mode "default"
        bindsym Enter mode "default"
        bindsym v exec "vivaldi"; mode "default"
        bindsym e exec "nautilus --no-desktop"; mode "default"
	bindsym m exec "gnome-terminal -e  'bash -lc neomutt'"; mode "default"
	bindsym n exec "gnome-terminal -e  'bash -lc newsboat'"; mode "default"
}


mode "turnoff"
{
	bindsym s exec "shutdown now"
	bindsym Escape mode "default"
	bindsym l exec "xset dpms 1 0 0;i3lock -i /home/accacio/wallpapers/lock.png -n -c 000000;xset dpms 0 0 0";mode "default"
}
bindsym $mod+Shift+e mode "turnoff"
bindsym $mod+o mode "apps"
exec_always setxkbmap -option caps:ctrl_modifier
exec_always setxkbmap -option ctrl:nocaps
exec_always setxkbmap -option compose:menu

exec "nm-applet &"

bindsym $mod+Control+l workspace next
bindsym $mod+Control+j workspace prev
bindsym $mod+Shift+Control+l move workspace next;workspace next
bindsym $mod+Shift+Control+j  move workspace prev;workspace prev

bindsym Print exec "gnome-screenshot -i"

bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -c 1 set 'Master' 10+ #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -c 1 set 'Master' 10- #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master toggle -q # mute sound
bindsym XF86Calculator exec --no-startup-id galculator
# bindsym XF86Mail exec --no-startup-id thunderbird
bindsym XF86Mail exec "gnome-terminal -e  'bash -lc neomutt'"


bindsym XF86HomePage exec --no-startup-id vivaldi

bindsym XF86Display mode "multi-monitor"

bindsym XF86PowerOff exec i3lock -i /home/accacio/wallpapers/lock.png -n -c 000000

exec compton

# Mouse configs

exec_always xinput set-prop 'DLL0675:00 06CB:75DB Touchpad' 'Synaptics Scrolling Distance' -20 -20
exec_always xinput set-prop 'DLL0675:00 06CB:75DB Touchpad' 'Synaptics Two-Finger Scrolling' 1 1
exec_always xinput set-prop 'DLL0675:00 06CB:75DB Touchpad' 'Synaptics Edge Scrolling'  0 0 0
exec_always xinput set-prop 'SynPS/2 Synaptics TouchPad' 'Synaptics Scrolling Distance' -200 -20

# Wacom configs
exec_always xinput set-prop 'Wacom Intuos PT S 2 Finger touch' 'Wacom Touch Gesture Parameters' 1, 10, 10
exec_always "~/dots/scripts/changeWallpaper"






bindsym  --whole-window button10 [class="Vivaldi-stable"] mode "Mouse10"; [class="Vivaldi-stable"] exec "sleep 0.5;xdotool key Escape"
bindsym  --whole-window button11 [class="Vivaldi-stable"] mode "Mouse11";exec "sleep 0.5;xdotool key Escape"

mode "Mouse10"
{
	bindsym Escape mode "default"
	bindsym --whole-window button10 mode "default"
	bindsym  --whole-window button6 [class="Vivaldi-stable"]  exec "xdotool key alt+Left;xdotool keyup alt;xdotool keyup Left"
	bindsym  --whole-window button7 [class="Vivaldi-stable"]  exec "xdotool key alt+Right;xdotool keyup alt;xdotool keyup Right"

}

mode "Mouse11"
{
	bindsym Escape mode "default"
	bindsym --whole-window button11 [class="Vivaldi-stable"] mode "default"
	bindsym  --whole-window button6 [class="Vivaldi-stable"]  exec "xdotool key ctrl+shift+t;xdotool keyup ctrl; xdotool keyup shift;xdotool keyup t"
	bindsym  --whole-window button7 [class="Vivaldi-stable"]  exec "xdotool key ctrl+t;xdotool keyup ctrl;xdotool pukeyup t"
}




# bindsym  --whole-window button6 [class="Vivaldi-stable"]  exec "xdotool key ctrl+shift+Tab;xdotool keyup ctrl;xdotool keyup shift;xdotool keyup Tab"
# bindsym  --whole-window button7 [class="Vivaldi-stable"]  exec "xdotool key --clearmodifiers ctrl+Tab;xdotool keyup ctrl;xdotool keyup shift"

bindcode --release 105 exec "~/dots/scripts/findMouse"
# Screen brightness controls
bindsym XF86MonBrightnessUP exec xbacklight + 20 # decrease screen brightness
bindsym XF86MonBrightnessDown exec xbacklight - 20 # decrease screen brightness