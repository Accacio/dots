#!/bin/bash
exec 3>&1;

monitors=($(xrandr|awk '/ connected/ {printf "%s\n",$1}'| awk '{print NR"-"$1}'))
modes=('one' 'two' 'three' 'wacom' 'IMT')

twoLayouts=('sideBySide' 'Stacked')

function printnl {
  printf '%s\n' "$1"
}

threeLayouts=('sideBySide' 'Stacked')
function printnl {
  printf '%s\n' "$1"
}

function TwoMonitors {
        monitor1=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "$1 Monitor")
        [ "$monitor1" = "" ] && notify-send exit && exit 0
        monitors=( ${monitors[@]/$monitor1} )
        monitor2=$(printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i -p "$2 Monitor")
        [ "$monitor2" = "" ] && notify-send exit && exit 0
        monitors=( ${monitors[@]/$monitor2} )
        monitor1="$( echo $monitor1 | sed "s|^[^-]*-||")"
        monitor2="$( echo $monitor2 | sed "s|^[^-]*-||")"
        notify-send "$monitor1 $monitor2"
        other=`printf ' --output %s --off ' "${monitors[@]}" |sed "s| [0-9]-| |g"`
}

function ThreeMonitors {
        monitor1=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "Left Monitor")
        [ "$monitor1" = "" ] && notify-send exit && exit 0
        monitors=( ${monitors[@]/$monitor1} )
        monitor2=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "Center Monitor")
        [ "$monitor1" = "" ] && notify-send exit && exit 0
        monitors=( ${monitors[@]/$monitor2} )
        monitor3=$(printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i -p "Right Monitor")
        [ "$monitor1" = "" ] && notify-send exit && exit 0
        monitor1="$( echo $monitor1 | sed "s|^[^-]*-||")"
        monitor2="$( echo $monitor2 | sed "s|^[^-]*-||")"
        monitor3="$( echo $monitor3 | sed "s|^[^-]*-||")"
        notify-send "$monitor1 $monitor2 $monitor3"
}


mode=$(printf '%s\n' "${modes[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i -p "# Monitors")

case $mode in
    one)
    monitor=$(printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "Monitor")
    [ "$monitor" = "" ] && notify-send exit && exit 0
    monitors=( ${monitors[@]/$monitor} )
    other=`printf ' --output %s --off ' "${monitors[@]}" |sed "s| [0-9]-| |g"`
    # turn off all others
    monitorres=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor" -A 1 | tail -n 1)
    xrandr --output $monitor $monitorres $other
    ;;
    two)
    layout=$(printf '%s\n' "${twoLayouts[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i -p "Layout")
    case $layout in
        sideBySide)
        TwoMonitors "Left" "Right"
        xrandr --output $monitor1 --auto --left-of $monitor2 --output $monitor2 --auto $other
        ;;
        Stacked)
        TwoMonitors "Top" "Down"
        top=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor1" -A 1 | tail -n 1)
        topY=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor1" -A 1 | tail -n 1|sed "s,.*x,,")
        topX=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor1" -A 1 | tail -n 1|sed "s,x.*,,")
        down=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor2" -A 1 | tail -n 1)
        downY=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor2" -A 1 | tail -n 1|sed "s,.*x,,")
        downX=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor2" -A 1 | tail -n 1|sed "s,x.*,,")
        xrandr --output $monitor1 --auto --mode $top --pos 0x0 --output $monitor2 --auto --mode $down --pos $((($topX-$downX)/2))x$topY $other
        ;;
    esac
    ;;
    three)
    layout=$(printf '%s\n' "${threeLayouts[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i -p "Layout")
    case $layout in
        sideBySide)
        ThreeMonitors "Left" "Center" "Right"
        xrandr --output $monitor1 --auto --left-of $monitor2 --output $monitor2 --auto --left-of $monitor3 --output $monitor3 --auto
        ;;
        Stacked)
        ThreeMonitors "Left" "Center" "Right"
        xrandr --output $monitor1 --auto --above $monitor2 --output $monitor2 --auto --above $monitor3 --output $monitor3 --auto
        ;;
    esac
    ;;
    wacom)
    styluses=("$(xsetwacom --list | grep stylus | sed "s;\(.*\) Pen stylus.*id:.*;\1;" | awk '{printf "%s\n",$0}')")
    stylus=$( printf '%s\n' "${styluses[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "$1 Stylus")

    monitors=(${monitors[@]} "All")
    Monitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "Monitor" |sed "s|[0-9]-||" )
    if [ $Monitor == "All" ]; then
        xsetwacom set "$stylus Pen stylus" MapToOutput $(xrandr | sed 1q | sed "s, x ,x,g;s/,//g" | cut -d" " -f 6)+0+0
        exit
    fi
    if [ "$Monitor" == "" ]; then
        exit
    fi
    res=$(xrandr | grep ^$Monitor | sed "s,.* \([0-9]*x[0-9]*+[0-9]*+[0-9]*\).*,\1,")
    modes=('right' '➲right' 'left' '➲left' 'total' 'calibrate')
    mode=$( printf '%s\n' "${modes[@]}"|sed 's/^ //'|rofi -dmenu -theme nord -i  -p "Monitor" |sed "s|[0-9]-||" )
    # if right or left
    # xsetwacom set "Wacom Intuos PT S 2 Pen stylus" Rotate ccw;
    # xsetwacom set "Wacom Intuos PT S 2 Finger touch" Rotate ccw;

    xsetwacom set "$stylus Pen stylus" Rotate cw;
    xsetwacom set "$stylus Finger touch" Rotate cw;
    xres=$(echo $res | sed -e "s,\([0-9]*\)x.*,\1,")
    yres=$(echo $res | sed -e "s,[0-9]*x\([0-9]*\)+.*,\1,")
    xpos=$(echo $res | sed -e "s,[0-9]*x[0-9]*+\([0-9]*\)+.*,\1,")
    ypos=$(echo $res | sed -e "s,[0-9]*x[0-9]*+[0-9]*+\([0-9]*\).*,\1,")
    case $mode in
        ➲left)
        newres=$(echo $(echo "scale=0;$yres/1.5" | bc -l)x$yres+$xpos+$ypos)
        ;;
        left)
        xsetwacom set "$stylus Pen stylus" Rotate none;
        xsetwacom set "$stylus Finger touch" Rotate none;
        notify-send "${xres}x${yres}+${xpos}+$ypos"
        newres=$(echo $(echo "scale=0;$yres*3/2" | bc -l)x$yres+$( echo "scale=0;$xpos" |bc -l)+$ypos)
        notify-send $newres
        ;;
        ➲right)
        newres=$(echo $(echo "scale=0;$yres/1.5" | bc -l)x$yres+$( echo "scale=0;$xpos+$xres-$yres/1.5" |bc -l)+$ypos)
        notify-send $newres
        ;;
        right)
        xsetwacom set "$stylus Pen stylus" Rotate none;
        xsetwacom set "$stylus Finger touch" Rotate none;
        notify-send "${xres}x${yres}+${xpos}+$ypos"
        newres=$(echo $(echo "scale=0;$yres*3/2" | bc -l)x$yres+$( echo "scale=0;$xpos+$xres-$yres*3/2" |bc -l)+$ypos)
        notify-send $newres
        ;;
        total)
        xsetwacom set "$stylus Pen stylus" Rotate none;
        xsetwacom set "$stylus Finger touch" Rotate none;
        newres=$res
        ;;
        calibrate)
        xsetwacom set "$stylus Pen stylus" Rotate none;
        xsetwacom set "$stylus Finger touch" Rotate none;


        mode=$(echo "" | rofi -dmenu -theme nord -i  -p "topLeft")
        topLeft=$(xdotool getmouselocation | cut -d" " -f 1-2 | sed "s,[xy]:,,g")
        topLeftX=$(echo "$topLeft" | cut -d" " -f 1)
        topLeftY=$(echo "$topLeft" | cut -d" " -f 2)


        mode=$(echo "" | rofi -dmenu -theme nord -i  -p "bottomLeft")
        bottomLeft=$(xdotool getmouselocation | cut -d" " -f 1-2 | sed "s,[xy]:,,g")
        bottomLeftX=$(echo "$bottomLeft" | cut -d" " -f 1)
        bottomLeftY=$(echo "$bottomLeft" | cut -d" " -f 2)

        mode=$(echo "" | rofi -dmenu -theme nord -i  -p "bottomRight")
        bottomRight=$(xdotool getmouselocation | cut -d" " -f 1-2 | sed "s,[xy]:,,g")
        bottomRightX=$(echo "$bottomRight" | cut -d" " -f 1)
        bottomRightY=$(echo "$bottomRight" | cut -d" " -f 2)

        mode=$(echo "" | rofi -dmenu -theme nord -i  -p "topRight")
        topRight=$(xdotool getmouselocation | cut -d" " -f 1-2 | sed "s,[xy]:,,g")
        topRightX=$(echo "$topRight" | cut -d" " -f 1)
        topRightY=$(echo "$topRight" | cut -d" " -f 2)

        width=$( echo "scale=0;$topRightX-$topLeftX" |bc -l)
        height=$( echo "scale=0;$bottomRightY-$topRightY" |bc -l)
        newres=$(echo  ${width}x${height}+${topLeftX}+${topLeftY})
        ;;
    esac
    xsetwacom set "$stylus Pen stylus" MapToOutput $newres
    ;;
    IMT)
    xrandr --output eDP-1 --primary --mode 1368x768 --pos 276x1080 --rotate normal --output DP-1 --off --output HDMI-1 --off --output DP-2 --off --output HDMI-2 --off --output DP-1-1 --off --output DP-1-2 --mode 1920x1080 --pos 1920x0 --rotate normal --output DP-1-3 --mode 1920x1080 --pos 0x0 --rotate normal
    ;;
esac

exit

$SCRIPTSFOLDER/launchPolybar
