#!/bin/bash
exec 3>&1;

monitors=($(xrandr|awk '/ connected/ {printf "%s\n",$1}'| awk '{print NR"-"$1}'))
modes=('one' 'two' 'three')

twoLayouts=('sideBySide' 'Stacked')


mode=$(echo "${modes[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i -p "# Monitors")

case $mode in
    one)
    monitor=$(  echo "${monitors[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i  -p "Monitor")
    # turn off all others
    xrandr --output $monitor
    ;;
    two)
    layout=$(echo "${twoLayouts[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i -p "Layout")
    case $layout in
        sideBySide)
        leftMonitor=$(  echo "${monitors[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i  -p "Left Monitor")
        monitors=( ${monitors[@]/$leftMonitor} )
        rightMonitor=$(  echo "${monitors[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i -p "Right Monitor")
        leftMonitor="$(echo $leftMonitor | sed "s|^[^-]*-||")"
        rightMonitor="$(echo $rightMonitor | sed "s|^[^-]*-||")"
        notify-send "$leftMonitor $rightMonitor"
        xrandr --output $leftMonitor --left-of $rightMonitor --output $rightMonitor
        ;;
        Stacked)
        topMonitor=$(  echo "${monitors[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i  -p "Top Monitor")
        monitors=( ${monitors[@]/$topMonitor} )
        downMonitor=$(  echo "${monitors[@]/%/$'\n'}"|sed 's/^ //'|dmenu -i -p "Down Monitor")
        topMonitor="$(echo $topMonitor | sed "s|^[^-]*-||")"
        downMonitor="$(echo $downMonitor | sed "s|^[^-]*-||")"
        notify-send $topMonitor $downMonitor
        topY=$(xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1|sed "s,.*x,,")
        topX=$(xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1|sed "s,x.*,,")
        downY=$(xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1|sed "s,.*x,,")
        downX=$(xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1|sed "s,x.*,,")
        xrandr --output $topMonitor --pos 0x0 --output $downMonitor --pos $((($topX-$downX)/2))x$topY
        ;;
    esac
    ;;
esac








exit

mode=$(gdialog --title "Multi-monitor" --menu "Multi-monitor" 15 55 5\
	       o "One Screen"\
	       l "Second screen on the Left" \
	       ld "Second screen on the Left Down" \
	       r "Second screen on the Right" \
	       rd "Second screen on the Right Down" \
	       u "Second screen on the Left (PBP)" \
	       t "Second screen on the Top" \
	       td "Second screen on the Top Down" \
	       rr "Rotate Right"\
	       rl "Rotate Left"\
	       ru "Rotate Up"\
	       rd "Rotate Down"\
	       \
	       2>&1 1>&3)
# mode=$(echo -e "One Screen\nLeft\nRight"|dmenu -sb seagreen -i -p "Multi-monitor")
case $mode in
    o)
	notify-send "Monitor Scheme changed" "One screen"
	. $SCRIPTSFOLDER/oneScreen;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    l)
	notify-send "Monitor Scheme changed" "Second screen on the Left"
	. $SCRIPTSFOLDER/dualScreenLeft;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    r)
	notify-send "Monitor Scheme changed" "Second screen on the Right"
	. $SCRIPTSFOLDER/dualScreenRight;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    u) 
	notify-send "Monitor Scheme changed" "Second screen on the Left (PBP)"
	. $SCRIPTSFOLDER/dualScreenLeft 1720x1440  ;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    t)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	. $SCRIPTSFOLDER/dualScreenTop;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    td)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	. $SCRIPTSFOLDER/dualScreenTop d;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    rr)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	xrandr -o right;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    rl)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	xrandr -o left;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    ru)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	xrandr -o normal;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    rd)
	notify-send "Rotate Down"
	xrandr -o inverted;$SCRIPTSFOLDER/changeWallpaper -1
	;;
esac
$SCRIPTSFOLDER/launchPolybar
