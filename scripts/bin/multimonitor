#!/bin/bash
exec 3>&1;

monitors=($(xrandr|awk '/ connected/ {printf "%s\n",$1}'| awk '{print NR"-"$1}'))
modes=('one' 'two' 'three' 'wacom')

twoLayouts=('sideBySide' 'Stacked')
function printnl {
  printf '%s\n' "$1"
}
threeLayouts=('sideBySide' 'Stacked')
function printnl {
  printf '%s\n' "$1"
}

mode=$(printf '%s\n' "${modes[@]}"|sed 's/^ //'|dmenu -i -p "# Monitors")

case $mode in
    one)
    monitor=$(printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Monitor")
    [ $monitor = "" ] && notify-send exit && exit 0
    monitors=( ${monitors[@]/$monitor} )
    other=`printf ' --output %s --off ' "${monitors[@]}" |sed "s|[0-9]-||"`
    # turn off all others
    monitorres=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$monitor" -A 1 | tail -n 1)
    xrandr --output $monitor $monitorres $other
    ;;
    two)
    layout=$(printf '%s\n' "${twoLayouts[@]}"|sed 's/^ //'|dmenu -i -p "Layout")
    case $layout in
        sideBySide)
        leftMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Left Monitor")
        monitors=( ${monitors[@]/$leftMonitor} )
        rightMonitor=$(printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i -p "Right Monitor")
        leftMonitor="$( echo $leftMonitor | sed "s|^[^-]*-||")"
        rightMonitor="$( echo $rightMonitor | sed "s|^[^-]*-||")"
        notify-send "$leftMonitor $rightMonitor"
        xrandr --output $leftMonitor --left-of $rightMonitor --output $rightMonitor
        ;;
        Stacked)
        topMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Top Monitor")
        monitors=( ${monitors[@]/$topMonitor} )
        downMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i -p "Down Monitor")
        topMonitor="$(echo $topMonitor | sed "s|^[^-]*-||")"
        downMonitor="$(echo $downMonitor | sed "s|^[^-]*-||")"
        notify-send $topMonitor $downMonitor
        top=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1)
        topY=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1|sed "s,.*x,,")
        topX=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1|sed "s,x.*,,")
        down=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1)
        downY=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1|sed "s,.*x,,")
        downX=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1|sed "s,x.*,,")
        xrandr --output $topMonitor --mode $top --pos 0x0 --output $downMonitor --mode $down --pos $((($topX-$downX)/2))x$topY
        ;;
    esac
    ;;
    three)
    layout=$(printf '%s\n' "${threeLayouts[@]}"|sed 's/^ //'|dmenu -i -p "Layout")
    case $layout in
        sideBySide)
        leftMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Left Monitor")
        monitors=( ${monitors[@]/$leftMonitor} )
        centerMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Center Monitor")
        monitors=( ${monitors[@]/$centerMonitor} )
        rightMonitor=$(printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i -p "Right Monitor")
        leftMonitor="$( echo $leftMonitor | sed "s|^[^-]*-||")"
        centerMonitor="$( echo $centerMonitor | sed "s|^[^-]*-||")"
        rightMonitor="$( echo $rightMonitor | sed "s|^[^-]*-||")"
        notify-send "$leftMonitor $rightMonitor"
        xrandr --output $leftMonitor --left-of $centerMonitor --output $centerMonitor --left-of $rightMonitor --output $rightMonitor
        ;;
        Stacked)
        topMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Top Monitor")
        monitors=( ${monitors[@]/$topMonitor} )
        centerMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i -p "Center Monitor")
        monitors=( ${monitors[@]/$centerMonitor} )
        downMonitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i -p "Down Monitor")
        topMonitor="$(echo $topMonitor | sed "s|^[^-]*-||")"
        centerMonitor="$(echo $centerMonitor | sed "s|^[^-]*-||")"
        downMonitor="$(echo $downMonitor | sed "s|^[^-]*-||")"
        xrandr --output $topMonitor --above $centerMonitor --output $centerMonitor --above $downMonitor --output $downMonitor
        # notify-send $topMonitor $downMonitor
        # top=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1)
        # topY=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1|sed "s,.*x,,")
        # topX=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$topMonitor" -A 1 | tail -n 1|sed "s,x.*,,")
        # down=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1)
        # downY=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1|sed "s,.*x,,")
        # downX=$( xrandr | awk '/ connected|+/ {printf "%s\n",$1}' | grep "^$downMonitor" -A 1 | tail -n 1|sed "s,x.*,,")
        # xrandr --output $topMonitor --mode $top --pos 0x0 --output $downMonitor --mode $down --pos $((($topX-$downX)/2))x$topY
        ;;
    esac
    ;;
    wacom)
    Monitor=$( printf '%s\n' "${monitors[@]}"|sed 's/^ //'|dmenu -i  -p "Monitor" |sed "s|[0-9]-||" )
    res=$(xrandr | grep ^$Monitor | sed "s,.* \([0-9]*x[0-9]*+[0-9]*+[0-9]*\).*,\1,")
    modes=('right' 'left' 'total')
    mode=$( printf '%s\n' "${modes[@]}"|sed 's/^ //'|dmenu -i  -p "Monitor" |sed "s|[0-9]-||" )
    # if right or left
    xsetwacom set "Wacom Intuos PT S 2 Pen stylus" Rotate ccw;
    xsetwacom set "Wacom Intuos PT S 2 Finger touch" Rotate ccw;
    xres=$(echo $res | sed -e "s,\([0-9]*\)x.*,\1,")
    yres=$(echo $res | sed -e "s,[0-9]*x\([0-9]*\)+.*,\1,")
    xpos=$(echo $res | sed -e "s,[0-9]*x[0-9]*+\([0-9]*\)+.*,\1,")
    ypos=$(echo $res | sed -e "s,[0-9]*x[0-9]*+[0-9]*+\([0-9]*\).*,\1,")
    case $mode in
        left)
        newres=$(echo $(echo "scale=0;$yres/1.5" | bc -l)x$yres+$xpos+$ypos)
        ;;
        right)
        newres=$(echo $(echo "scale=0;$yres/1.5" | bc -l)x$yres+$( echo "scale=0;$xpos+$xres-$yres/1.5" |bc -l)+$ypos)
        ;;
        *)
        xsetwacom set "Wacom Intuos PT S 2 Pen stylus" Rotate none;
        xsetwacom set "Wacom Intuos PT S 2 Finger touch" Rotate none;
        newres=$res
        ;;
    esac
    xsetwacom set "Wacom Intuos PT S 2 Pen stylus" MapToOutput $newres
    ;;
esac








exit

mode=$(gdialog --title "Multi-monitor" --menu "Multi-monitor" 15 55 5\
	       o "One Screen"\
	       l "Second screen on the Left" \
	       ld "Second screen on the Left Down" \
	       r "Second screen on the Right" \
	       rd "Second screen on the Right Down" \
	       u "Second screen on the Left (PBP)" \
	       t "Second screen on the Top" \
	       td "Second screen on the Top Down" \
	       rr "Rotate Right"\
	       rl "Rotate Left"\
	       ru "Rotate Up"\
	       rd "Rotate Down"\
	       \
	       2>&1 1>&3)
# mode=$(echo -e "One Screen\nLeft\nRight"|dmenu -sb seagreen -i -p "Multi-monitor")
case $mode in
    o)
	notify-send "Monitor Scheme changed" "One screen"
	. $SCRIPTSFOLDER/oneScreen;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    l)
	notify-send "Monitor Scheme changed" "Second screen on the Left"
	. $SCRIPTSFOLDER/dualScreenLeft;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    r)
	notify-send "Monitor Scheme changed" "Second screen on the Right"
	. $SCRIPTSFOLDER/dualScreenRight;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    u) 
	notify-send "Monitor Scheme changed" "Second screen on the Left (PBP)"
	. $SCRIPTSFOLDER/dualScreenLeft 1720x1440  ;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    t)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	. $SCRIPTSFOLDER/dualScreenTop;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    td)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	. $SCRIPTSFOLDER/dualScreenTop d;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    rr)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	xrandr -o right;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    rl)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	xrandr -o left;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    ru)
	notify-send "Monitor Scheme changed" "Second screen on Top"
	xrandr -o normal;$SCRIPTSFOLDER/changeWallpaper -1
	;;
    rd)
	notify-send "Rotate Down"
	xrandr -o inverted;$SCRIPTSFOLDER/changeWallpaper -1
	;;
esac
$SCRIPTSFOLDER/launchPolybar
