#!/bin/bash
export DISPLAY=$(who | grep $(whoami) | sed "s,.*(\(.*\)).*,\1,g" | cut -d" " -f 2)
export XDG_RUNTIME_DIR='/run/user/1000'
# emacs -Q \
#     --eval="(add-to-list 'load-path \"~/.emacs.d/.local/straight/repos/emacs-doom-themes/\")" \
#     --eval="(load-file \"~/.emacs.d/.local/straight/repos/emacs-doom-themes/themes/doom-one-theme.el\")" \
#     --eval="(setq org-modules '(ol-bibtex org-habit org-habit-plus))" \
#     -l ~/.emacs.d/.local/straight/repos/emacs-htmlize/htmlize.el \
#     --eval="(defvar +org-habit-graph-padding 2)" \
#     --eval="(defvar +org-habit-min-width 60)" \
#     --eval="(defvar +org-habit-graph-window-ratio 0.2)" \
#     --eval="(defun +org-init-habit-h () (add-hook 'org-agenda-mode-hook (defun +org-habit-resize-graph-h () (when (featurep 'org-habit) (let* ((total-days (float (+ org-habit-preceding-days org-habit-following-days))) (preceding-days-ratio (/ org-habit-preceding-days total-days)) (graph-width (floor (* (window-width) +org-habit-graph-window-ratio))) (preceding-days (floor (* graph-width preceding-days-ratio))) (following-days (- graph-width preceding-days)) (graph-column (- (window-width) (+ preceding-days following-days))) (graph-column-adjusted (if (> graph-column +org-habit-min-width) (- graph-column +org-habit-graph-padding) nil))) (setq-local org-habit-preceding-days preceding-days) (setq-local org-habit-following-days following-days) (setq-local org-habit-graph-column graph-column-adjusted))))))" \
#     --eval='(setq org-agenda-files (list "~/org/private/Eve.org" "~/org/private/todo.org" "~/org/private/todo_these.org" "~/org/private/fromPoli.org" "~/org/private/fromGmail.org" "~/org/private/fromSupelec.org"))' \
#     --eval="(+org-init-habit-h)" \
#     --eval="(setq org-agenda-custom-commands '((\"n\" \"Agenda and all TODOs\" ((agenda \"\") (alltodo "")) nil (\"~/org/private/agenda.html\"))))" \
#     --eval="(org-agenda nil \"n\")" \
#     --eval="(org-agenda nil \"e\")" --kill
# emacsclient -e '(org-agenda nil "e")' -s $HOME/.emacs.d/server/server
# emacsclient -e '(org-agenda nil "e")'
emacsclient -e '(org-agenda nil "e")'
# sed -i 's|<pre>| <iframe src=\"https://calendar.google.com/calendar/embed?height=600\&amp;wkst=1\&amp;bgcolor=%23ffffff\&amp;ctz=Europe%2FParis\&amp;src=cmFjY2FjaW8yQGdtYWlsLmNvbQ\&amp;src=dHZldGxpNDdtY2NmOW0wdWVxMTFwcmMyYm9AZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ\&amp;src=NzRwMTgzZmprcnVsbDJoOGtsNTJxMWx0cTRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ\&amp;src=ajVhZzU2YTZnbDc1OXBsZnUydHFpM2VkNmZqNmVyN2JAaW1wb3J0LmNhbGVuZGFyLmdvb2dsZS5jb20\&amp;src=ZXZlbGlzZWFudHVuZXNAZ21haWwuY29t\&amp;color=%230B8043\&amp;color=%23F09300\&amp;color=%23009688\&amp;color=%238E24AA\&amp;color=%23D81B60\" style=\"border:solid 1px #777\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe> <pre>|'  ~/org/private/agenda.html
# TODO add iframe?
#
emacsclient -e ' (let ((new-buffer-name (find-buffer-visiting  "~/org/private/gcal-orgmode.org") ))
  (set-buffer new-buffer-name )
  (set-visited-file-name "~/org/private/gcal-orgmode.org")
  (org-icalendar-export-to-ics )
  )'
