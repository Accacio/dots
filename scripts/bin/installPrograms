#!/bin/bash


sudo apt install dialog

if [ $# -eq 0 ]
then
    listProgramsFromOrg=$(awk 'BEGIN { ORS=" " }; {print "TRUE " $2}' \
			      ~/dots/programsToInstall.org)
else
    case "$1" in

	--minimumt|-mt)
	    listProgramsFromOrg=$(awk 'BEGIN { ORS=" " }; {print $2 " " $2 " off"}' \
				      ~/dots/programsToInstall.org)
	    ;;
	--minimum|-m)
	    listProgramsFromOrg=$(awk 'BEGIN { ORS=" " }; {print "FALSE " $2}' \
				      ~/dots/programsToInstall.org)
	    ;;
	-t)
	    listProgramsFromOrg=$(awk 'BEGIN { ORS=" " }; {print $2 " " $2 " on" }' \
				      ~/dots/programsToInstall.org)
	    ;;
    esac
fi

[[ $listProgramsFromOrg ]] || exit 1

if [ $# -eq 0 ]
then
    listPrograms=$(zenity  --list  --text "Programs to install" \
			   --height 500 --checklist  --column "Pick" \
			   --column "programs" $(echo $listProgramsFromOrg) \
			   --separator=" "); echo $listPrograms
else
    case "$1" in
	-t|-mt)
	    exec 3>&1
	    listPrograms=$(dialog --no-tags --checklist "Programs to install" 100 40 20 \
				  $(echo $listProgramsFromOrg)\
				  2>&1 1>&3)

	    echo $listPrograms
	    ;;
	-m)
	    listPrograms=$(zenity  --list  --text "Programs to install" \
				   --height 500 --checklist  --column "Pick" \
				   --column "programs" $(echo $listProgramsFromOrg) \
				   --separator=" "); echo $listPrograms
	    ;;
    esac
fi

[[ $listPrograms ]] || exit 1

# install st from github fork
if [[ $listPrograms == *" st "* ]]
then
    listPrograms=$( echo $listPrograms| sed 's/\ st\ /\ /g')
    echo bla $listPrograms
    [ -d ~/git/] || mkdir ~/git/
    cd ~/git/
    [ -d ~/git/st/] || git clone http://github.com/Accacio/st
    cd st
    make
    sudo make install
    sudo update-alternatives --install /usr/bin/st x-terminal-emulator /usr/local/bin/st 90
fi

# install emacs from ppa
if [[ $listPrograms == *"emacs"* ]]
then
    listPrograms=${listPrograms//"emacs"/}
    sudo add-apt-repository ppa:kelleyk/emacs
    sudo apt-get update
    sudo apt-get install emacs26
    git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
    ~/.emacs.d/bin/doom install
fi

# install ueberzug from ppa
if [[ $listPrograms == *"ueberzug"* ]]
then
    listPrograms=${listPrograms//"ueberzug"/}
    sudo apt-get install python3-pip
    sudo -H pip3 install ueberzug
fi

# install xournalpp from repo
if [[ $listPrograms == *"xournalpp"* ]]
then
    listPrograms=${listPrograms//"xournalpp"/}
    sudo add-apt-repository ppa:andreasbutti/xournalpp-master
    sudo apt install xournalpp
fi

# install vivaldi from repo
if [[ $listPrograms == *"vivaldi"* ]]
then
    listPrograms=${listPrograms//"vivaldi"/}
    wget -qO- http://repo.vivaldi.com/stable/linux_signing_key.pub | sudo apt-key add -
    sudo add-apt-repository "deb [arch=i386,amd64] http://repo.vivaldi.com/stable/deb/ stable main"
    sudo apt-get install vivaldi-stable
fi


# custom install zsh
if [[ $listPrograms == *"zsh"* ]]
then
    listPrograms=${listPrograms//"zsh"/}
    sudo apt-get install zsh
    # oh my zsh
    sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi


# custom install qutebrowser
if [[ $listPrograms == *"qutebrowser"* ]]
then
    listPrograms=${listPrograms//"qutebrowser"/}
    git clone https://github.com/qutebrowser/qutebrowser.git ~/git/qutebrowser/
    pushd ~/git/qutebrowser/
    sudo python3 scripts/mkvenv.py
    popd
fi



# custom install polybar
if [[ $listPrograms == *"polybar"* ]]
then
    listPrograms=${listPrograms//"polybar"/}
    sudo apt-get install build-essential cmake cmake-data pkg-config \
	 libcairo2-dev lixcb1-dev libxcb-util0-dev libxcb-randr0-dev \
	 libxcb-composite0-dev python-xcbgen xcb-proto \
	 libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev \
	 libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libpulse-dev \
	 libjsopncpp-dev libmpdclient-dev libcurl4-openssl-dev \
	 libiw-dev libnl-genl-3-dev
    cd $HOME/git/
    git clone https://github.com/jaagr/polybar
    cd polybar
    ./build
fi


xdg-settings set default-web-browser browser.desktop
# install all other programs
sudo apt-get install  --no-install-recommends $(echo $listPrograms)
# sudo apt-get remove xterm gnome-terminal
