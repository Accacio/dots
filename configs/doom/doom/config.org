#+PROPERTY: header-args :comments yes

* General settings
#+begin_src emacs-lisp
(setq user-full-name "Rafael Acc√°cio Nogueira"
      user-mail-address "rafael.accacio.nogueira@gmail.com")
#+end_src

#+begin_src emacs-lisp
(setq search-whitespace-regexp ".*?")

(show-smartparens-global-mode 1)

(let ((langs '("american" "fr_FR" "pt_BR")))
      (setq lang-ring (make-ring (length langs)))
      (dolist (elem langs) (ring-insert lang-ring elem)))
(let ((dics '("american-english" "french" "portuguese")))
      (setq dic-ring (make-ring (length dics)))
      (dolist (elem dics) (ring-insert dic-ring elem)))

  (defun cycle-ispell-languages ()
      (interactive)
      (let (
            (lang (ring-ref lang-ring -1))
            (dic (ring-ref dic-ring -1))
            )
        (ring-insert lang-ring lang)
        (ring-insert dic-ring dic)
        (ispell-change-dictionary lang)
        (setq ispell-complete-word-dict (concat "/usr/share/dict/" dic))
        ))
(global-set-key [f6] 'cycle-ispell-languages)
#+end_src
* UI
** Theme/Visuals
#+begin_src emacs-lisp
;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function.
(setq doom-theme 'doom-nord)
;; (setq doom-font (font-spec :family "monospace" :size 14))
;; (setq doom-font (font-spec :family "Glass TTY VT220" :size 20))
;; (setq doom-font (font-spec :family "Source Code Pro" :size 16))
(setq doom-font (font-spec :family "Roboto Mono" :size 16))
;; (setq doom-font (font-spec :family "Fira Code" :size 16))


(defun toggle-transparency ()
   (interactive)
   (let ((alpha (frame-parameter nil 'alpha)))
     (set-frame-parameter
      nil 'alpha
      (if (eql (cond ((numberp alpha) alpha)
                     ((numberp (cdr alpha)) (cdr alpha))
                     ;; Also handle undocumented (<active> <inactive>) form.
                     ((numberp (cadr alpha)) (cadr alpha)))
               100)
          '(95 . 80) '(100 . 100)))))

(map! :leader
      (:prefix-map ("t" . "toggle")
        :desc "Transparency"                 "T" 'toggle-transparency))

(setq global-hl-line-modes nil)

(setq display-line-numbers-type 'relative)
(custom-set-faces!
  '(line-number :foreground "#A3BE8C")
  '(line-number-current-line :foreground "#EBCB8B")
)
#+end_src
#+begin_src emacs-lisp
#+end_src
